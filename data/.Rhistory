)
# Look at the absences score  ---------------------------------------------
mod_absence <-
score_dat %>%
select(
contains("score"),
Ethnicity,
Absences.Converted,
Activities,
Accepted
) %>%
mutate(
test_score = Recommendation.Score + Grades.Score + PSAT.Score.Converted + Absences.Converted + Activities,
remove_absence = Recommendation.Score + Grades.Score + PSAT.Score.Converted + Activities,
Accepted = case_when(
grepl("NOT", Accepted) ~ 0,
TRUE ~ 1
),
Ethnicity = factor(str_to_upper(Ethnicity), levels = c("WHITE", "HISPANIC", "AFRICAN AMERICAN", "OTHER"))
)
lm(Absences.Converted ~  remove_absence  + `Ethnicity`, data = mod_absence)
<- lm(Absences.Converted ~  Ethnicity+ remove_absence   + year, data = mod_absence)
absence_mod <- lm(Absences.Converted ~  Ethnicity+ remove_absence   + year, data = mod_absence)
# Look at the absences score  ---------------------------------------------
mod_absence <-
score_dat %>%
select(
contains("score"),
Ethnicity,
Absences.Converted,
Activities,
Accepted,
year
) %>%
mutate(
test_score = Recommendation.Score + Grades.Score + PSAT.Score.Converted + Absences.Converted + Activities,
remove_absence = Recommendation.Score + Grades.Score + PSAT.Score.Converted + Activities,
Accepted = case_when(
grepl("NOT", Accepted) ~ 0,
TRUE ~ 1
),
Ethnicity = factor(str_to_upper(Ethnicity), levels = c("WHITE", "HISPANIC", "AFRICAN AMERICAN", "OTHER"))
)
# Look at the absences score  ---------------------------------------------
absence_dat <-
score_dat %>%
select(
contains("score"),
Ethnicity,
Absences.Converted,
Activities,
Accepted,
year
) %>%
mutate(
test_score = Recommendation.Score + Grades.Score + PSAT.Score.Converted + Absences.Converted + Activities,
remove_absence = Recommendation.Score + Grades.Score + PSAT.Score.Converted + Activities,
Accepted = case_when(
grepl("NOT", Accepted) ~ 0,
TRUE ~ 1
),
Ethnicity = factor(str_to_upper(Ethnicity), levels = c("WHITE", "HISPANIC", "AFRICAN AMERICAN", "OTHER"))
)
absence_mod <- lm(Absences.Converted ~  Ethnicity+ remove_absence   + year, data = absence_dat)
summary(absence_mod)
# Look at what, if anything is being measured -----------------------------
absence_fa <-
score_dat %>%
select(
contains("score"),
Ethnicity,
Absences.Converted,
Activities,
)
absence_fa
# Look at what, if anything is being measured -----------------------------
absence_fa <-
score_dat %>%
select(
contains("score"),
Ethnicity,
Absences.Converted,
Activities,
)
absence_fa
pairs(absence_fa, upper.panel = NULL)
absence_fa
# Look at what, if anything is being measured -----------------------------
absence_fa <-
score_dat %>%
select(
contains("score"),
Ethnicity,
Absences.Converted,
Activities,
-Total.Score
)  %>%
filter(!is.na(PSAT.Score.Converted))
absence_fa
# Look at what, if anything is being measured -----------------------------
absence_fa <-
score_dat %>%
select(
contains("score"),
Absences.Converted,
Activities,
-Total.Score
)  %>%
filter(!is.na(PSAT.Score.Converted))
absence_fa
pairs(absence_fa, upper.panel = NULL)
alpha(absence_fa, check.keys = TRUE) # Raw alpha of .88. Dropping rent burden occupied would increase reliability but not by much
principal(absence_fa, nfactors=1, rotate="none", scores=TRUE) ## A PCA gets 69% of the variance
principal(absence_fa, nfactors=2, rotate="none", scores=TRUE) ## A portion of the rent burden variance is oblique to the rest, but it is only 12% of the overall vatriance
scree(absence_fa)
scree(absence_fa)
fa(absence_fa, nfactors=1, rotate="promax", fm="ml", SMC=TRUE)  # Good RSEA, Scary low, actually, 62% of variance. Lowerish uniquenesses. rent burden does have less communality. We could maybe drop it but I don't see the need. It is easy to explain
fa(absence_fa, nfactors=2, rotate="promax", fm="ml", SMC=TRUE)  # Their correlation is so close that I'm not really sure it changes anything.
fa(absence_fa, nfactors=1, rotate="promax", fm="wls", SMC=TRUE) # This RMSEA is pretty stable. Great 90% CI, great BIC (the best so far) This could really work.
fa(absence_fa, nfactors=2, rotate="promax", fm="wls", SMC=TRUE) # It isnt two factors at all. Its definitely unidimensional. This is really great news.
# Check for metric invariance ---------------------------------------------------------------
absence_fa_inv <-
score_dat %>%
select(
contains("score"),
Absences.Converted,
Activities,
-Total.Score,
Ethnicity
)  %>%
filter(!is.na(PSAT.Score.Converted))
absence_fa_inv
absence_fa_black <-
score_dat %>%
filter(Ethnicity == "AFRICAN AMERICAN")
absence_fa_black <-
score_dat %>%
filter(Ethnicity == "AFRICAN AMERICAN") %>%
select(-Ethnicity)
absence_fa_black
absence_fa_black <-
absence_fa_inv %>%
filter(Ethnicity == "AFRICAN AMERICAN") %>%
select(-Ethnicity)
absence_fa_black
absence_fa_black <-
absence_fa_inv %>%
filter(Ethnicity == "AFRICAN AMERICAN") %>%
select(-Ethnicity)
absence_fa_white <-
absence_fa_inv %>%
filter(Ethnicity == "WHITE") %>%
select(-Ethnicity)
absence_fa_hisp <-
absence_fa_inv %>%
filter(Ethnicity == "HISPANIC") %>%
select(-Ethnicity)
absence_fa_hisp
fa(absence_fa_black, nfactors=1, rotate="promax", fm="wls", SMC=TRUE)
fa(absence_fa_white, nfactors=1, rotate="promax", fm="wls", SMC=TRUE) # absences to seem to vary with the other factors, to some extent
fa(absence_fa_black, nfactors=1, rotate="promax", fm="wls", SMC=TRUE) # absences to seem to vary with the other factors, to some extent
fa(absence_fa_white, nfactors=1, rotate="promax", fm="wls", SMC=TRUE) # absences are less related to performance here
fa(absence_fa_hisp, nfactors=1, rotate="promax", fm="wls", SMC=TRUE) # absences are less related to performance here
fa(absence_fa_white, nfactors=1, rotate="promax", fm="wls", SMC=TRUE) # absences are less related to performance here
fa(absence_fa_black, nfactors=1, rotate="promax", fm="wls", SMC=TRUE) # absences to seem to vary with the other factors, to some extent
fa(absence_fa_white, nfactors=1, rotate="promax", fm="wls", SMC=TRUE) # absences are less related to performance here
# Did the absence affect anyone? ------------------------------------------
absence_dat
# Did the absence affect anyone? ------------------------------------------
absence_dat
# Did the absence affect anyone? ------------------------------------------
absence_dat %>%
select(remove_absence, Accepted)
# Did the absence affect anyone? ------------------------------------------
absence_dat %>%
select(remove_absence, Accepted1 = Accepted1)
# Did the absence affect anyone? ------------------------------------------
absence_dat %>%
select(remove_absence, Accepted1 = Accepted)
# Did the absence affect anyone? ------------------------------------------
absence_dat %>%
select(remove_absence, Accepted1 = Accepted) %>%
inner_join(
absence_dat %>%
select(remove_absence, Accepted2 = Accepted)
)
# Did the absence affect anyone? ------------------------------------------
absence_dat %>%
select(remove_absence, Accepted1 = Accepted) %>%
inner_join(
absence_dat %>%
select(remove_absence, Accepted2 = Accepted)
) %>%
filter(Accepted1 != Accepted2)
absence_dat
# Look at the absences score  ---------------------------------------------
absence_dat <-
score_dat %>%
select(
contains("score"),
Ethnicity,
Absences.Converted,
Activities,
Accepted,
year
) %>%
mutate(
test_score = Recommendation.Score + Grades.Score + PSAT.Score.Converted + Absences.Converted + Activities,
remove_absence = Recommendation.Score + Grades.Score + PSAT.Score.Converted + Activities,
Accepted = case_when(
grepl("NOT", Accepted) ~ 0,
TRUE ~ 1
),
Ethnicity = factor(str_to_upper(Ethnicity), levels = c("WHITE", "HISPANIC", "AFRICAN AMERICAN", "OTHER"))
) %>%
mutate(
id = 1:n()
)
# Did the absence affect anyone? ------------------------------------------
absence_dat %>%
select(remove_absence, Accepted1 = Accepted, id1 = id) %>%
inner_join(
absence_dat %>%
select(remove_absence, Accepted2 = Accepted, id2 = id)
) %>%
filter(Accepted1 != Accepted2)
# Did the absence affect anyone? ------------------------------------------
absence_dat %>%
select(remove_absence, Accepted1 = Accepted, id1 = id) %>%
inner_join(
absence_dat %>%
select(remove_absence, Accepted2 = Accepted, id2 = id)
) %>%
filter(Accepted1 != Accepted2) %>%
mutate(
pair_id = 1:n()
)
# Did the absence affect anyone? ------------------------------------------
absence_dat %>%
select(remove_absence, Accepted1 = Accepted, id1 = id) %>%
inner_join(
absence_dat %>%
select(remove_absence, Accepted2 = Accepted, id2 = id)
) %>%
filter(Accepted1 != Accepted2) %>%
mutate(
pair_id = 1:n()
) %>%
select(
id1, id2
)
# Did the absence affect anyone? ------------------------------------------
absence_dat %>%
select(remove_absence, Accepted1 = Accepted, id1 = id) %>%
inner_join(
absence_dat %>%
select(remove_absence, Accepted2 = Accepted, id2 = id)
) %>%
filter(Accepted1 != Accepted2) %>%
mutate(
pair_id = 1:n()
) %>%
select(
id1, id2, pair_id
)
# Did the absence affect anyone? ------------------------------------------
opposite_pairs <-
absence_dat %>%
select(remove_absence, Accepted1 = Accepted, id1 = id) %>%
inner_join(
absence_dat %>%
select(remove_absence, Accepted2 = Accepted, id2 = id)
) %>%
filter(Accepted1 != Accepted2) %>%
mutate(
pair_id = 1:n()
) %>%
select(
id1, id2, pair_id
)
opposite_pairs
# Did the absence affect anyone? ------------------------------------------
opposite_pairs <-
absence_dat %>%
select(remove_absence, Accepted1 = Accepted, id1 = id) %>%
inner_join(
absence_dat %>%
select(remove_absence, Accepted2 = Accepted, id2 = id)
) %>%
filter(Accepted1 != Accepted2) %>%
mutate(
pair_id = 1:n()
) #%>%
opposite_pairs
# Did the absence affect anyone? ------------------------------------------
opposite_pairs <-
absence_dat %>%
select(remove_absence, Accepted1 = Accepted, id1 = id) %>%
inner_join(
absence_dat %>%
select(remove_absence, Accepted2 = Accepted, id2 = id)
) %>%
filter(Accepted1 != Accepted2) %>%
mutate(
pair_id = 1:n()
) %>%
filter(Accepted1 == 1)
opposite_pairs
accepted <-
absence_dat %>%
filter(id %in% opposite_pairs$id1)
accepted
not_accepted <-
absence_dat %>%
filter(
id %in% opposite_pairs$id2
)
not_accepted
accepted
not_accepted <-
absence_dat %>%
filter(
id %in% opposite_pairs$id2
) %>%
arrange(remove_absence)
accepted <-
absence_dat %>%
filter(id %in% opposite_pairs$id1) %>%
arrange(remove_absence)
accepted
not_accepted
library(tidyverse)
library(extrafont)
library(xlsx)
loadfonts() ## Load in the fonts I want to use
options(scipen = 6, digits = 4) # I prefer to view outputs in non-scientific notation
# Read in Data ------------------------------------------------------------
wb <- loadWorkbook("admissions_data.xlsx", password = "school56data")
sheets <- getSheets(wb)
dat <-
map(names(sheets),
~ xlsx::read.xlsx("admissions_data.xlsx",  sheetName = .x, password = "school56data") %>%
mutate(year = .x)
)
save(dat, file = "school_dat.RData")
score_dat <-
map_df(
dat,
~  .x %>%
filter(!is.na(Last.Name)) %>%
select(
Zip.Code,
Ethnicity,
PSAT.TOTAL,
Activities,
Recommendation.Score,
Grades.Score,
Absences.Converted,
PSAT.Score.Converted,
Total.Score,
Accepted = Accepted.,
year,
-contains("NA")
) %>%
mutate(across(c(
PSAT.TOTAL, contains("Score")
), as.numeric))
) %>%
as_tibble()
## try some common possibilities.
score_dat %>%
group_by(
year
) %>%
arrange(year, PSAT.TOTAL) %>%
filter(!is.na(PSAT.TOTAL)) %>%
mutate(
PSAT_rank_norm = (PSAT.TOTAL - min(PSAT.TOTAL, na.rm = TRUE))/ (max(PSAT.TOTAL, na.rm = TRUE) - min(PSAT.TOTAL, na.rm = TRUE))*40,
PSAT_PCT = round(1:n()/n() * 40)
) %>%
select(contains("PSAT")) %>%
View()
## how is it broken down?
score_dat %>%
select(contains("PSAT"), year) %>%
group_by(PSAT.Score.Converted, year) %>%
summarise(
min = min(PSAT.TOTAL),
max = max(PSAT.TOTAL)
) %>%
arrange(year, PSAT.Score.Converted) %>%
mutate(range = paste0(min, "-", max)) %>%
select(PSAT.Score.Converted, year, range) %>%
spread(year, range) %>%
View()
score_dat %>%
select(
contains("score"),
Ethnicity,
Absences.Converted,
Activities
) %>%
mutate(
test_score = Recommendation.Score + Grades.Score + PSAT.Score.Converted + Absences.Converted + Activities
)
# Look at the absences score  ---------------------------------------------
absence_dat <-
score_dat %>%
select(
contains("score"),
Ethnicity,
Absences.Converted,
Activities,
Accepted,
year
) %>%
mutate(
test_score = Recommendation.Score + Grades.Score + PSAT.Score.Converted + Absences.Converted + Activities,
remove_absence = Recommendation.Score + Grades.Score + PSAT.Score.Converted + Activities,
Accepted = case_when(
grepl("NOT", Accepted) ~ 0,
TRUE ~ 1
),
Ethnicity = factor(str_to_upper(Ethnicity), levels = c("WHITE", "HISPANIC", "AFRICAN AMERICAN", "OTHER"))
) %>%
mutate(
id = 1:n()
)
absence_mod <- lm(Absences.Converted ~  Ethnicity+ remove_absence   + year, data = absence_dat)
summary(absence_mod)
absence_mod2 <- lm(Absences.Converted ~  Ethnicity+ remove_absence*year, data = absence_dat)
anova(absence_mod2, absence_mod)
anova( absence_mod, absence_mod2)
absence_mod2
absence_mod
absence_mod2
coef(absence_mod)
summary(absence_mod)$coef
summary(absence_mod)$coef %>%
as_tibble()
summary(absence_mod)$coef %>%
as.data.frame()
summary(absence_mod)$coef %>%
as.data.frame() %>%
rownames_to_column()
summary(absence_mod)$coef %>%
as.data.frame() %>%
rownames_to_column() %>%
select(Estimate, err = `Std. Error`)
summary(absence_mod)$coef %>%
as.data.frame() %>%
rownames_to_column() %>%
select(Estimate, err = `Std. Error`) %<%
mutate(Estimate - 1.96* err, Estimate + 1.96*err)
summary(absence_mod)$coef %>%
as.data.frame() %>%
rownames_to_column() %>%
select(Estimate, err = `Std. Error`) %>%
mutate(Estimate - 1.96* err, Estimate + 1.96*err)
summary(absence_mod)$coef %>%
as.data.frame() %>%
rownames_to_column() %>%
select(Estimate, err = `Std. Error`) %>%
mutate(low = Estimate - 1.96* err, hi = Estimate + 1.96*err)
summary(absence_mod)$coef %>%
as.data.frame() %>%
rownames_to_column() %>%
select(rownames, Estimate, err = `Std. Error`) %>%
mutate(low = Estimate - 1.96* err, hi = Estimate + 1.96*err)
summary(absence_mod)$coef %>%
as.data.frame() %>%
rownames_to_column()
summary(absence_mod)$coef %>%
as.data.frame() %>%
rownames_to_column() %>%
select(var = rowname, Estimate, err = `Std. Error`) %>%
mutate(low = Estimate - 1.96* err, hi = Estimate + 1.96*err)
# Look at what, if anything is being measured -----------------------------
absence_fa <-
score_dat %>%
select(
contains("score"),
Absences.Converted,
Activities,
-Total.Score
)  %>%
filter(!is.na(PSAT.Score.Converted))
pairs(absence_fa, upper.panel = NULL)
pairs(absence_fa, upper.panel = NULL)
principal(absence_fa, nfactors=1, rotate="none", scores=TRUE)
principal(absence_fa, nfactors=2, rotate="none", scores=TRUE)
fa(absence_fa, nfactors=1, rotate="promax", fm="ml", SMC=TRUE)
fa(absence_fa, nfactors=2, rotate="promax", fm="ml", SMC=TRUE)
fa(absence_fa, nfactors=1, rotate="promax", fm="wls", SMC=TRUE)
fa(absence_fa_black, nfactors=1, rotate="promax", fm="wls", SMC=TRUE) # absences to seem to vary with the other factors, to some extent
fa(absence_fa_white, nfactors=1, rotate="promax", fm="wls", SMC=TRUE) # absences are less related to performance here
fa(absence_fa_hisp, nfactors=1, rotate="promax", fm="wls", SMC=TRUE) # absences are less related to performance here as well.
fa(absence_fa_black, nfactors=1, rotate="promax", fm="wls", SMC=TRUE) # absences to seem to vary with the other factors, to some extent
fa(absence_fa_white, nfactors=1, rotate="promax", fm="wls", SMC=TRUE) # absences are less related to performance here
fa(absence_fa_hisp, nfactors=1, rotate="promax", fm="wls", SMC=TRUE) # absences are less related to performance here as well.
fa(absence_fa_black, nfactors=1, rotate="promax", fm="wls", SMC=TRUE) # absences to seem to vary with the other factors, to some extent
fa(absence_fa_black, nfactors=1, rotate="promax", fm="wls", SMC=TRUE) # absences to seem to vary with the other factors, to some extent
fa(absence_fa_white, nfactors=1, rotate="promax", fm="wls", SMC=TRUE) # absences are less related to performance here
fa(absence_fa_hisp, nfactors=1, rotate="promax", fm="wls", SMC=TRUE) # absences are less related to performance here as well.
fa(absence_fa_black, nfactors=1, rotate="promax", fm="wls", SMC=TRUE) # absences to seem to vary with the other factors, to some extent
fa(absence_fa_white, nfactors=1, rotate="promax", fm="wls", SMC=TRUE) # absences are less related to performance here
fa(absence_fa_hisp, nfactors=1, rotate="promax", fm="wls", SMC=TRUE) # absences are less related to performance here as well.
fa(absence_fa, nfactors=1, rotate="promax", fm="wls", SMC=TRUE)
fa(absence_fa, nfactors=2, rotate="promax", fm="wls", SMC=TRUE)
fa(absence_fa, nfactors=1, rotate="promax", fm="wls", SMC=TRUE)
fa(absence_fa, nfactors=2, rotate="promax", fm="wls", SMC=TRUE)
fa(absence_fa, nfactors=1, rotate="promax", fm="wls", SMC=TRUE)
